package com.sn;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.ListIterator;

class MyStringComparator implements Comparator<String> {

	@Override
	public int compare(String s1, String s2) {
//		return s1.length() > s2.length() ? 1 : s1.length() < s2.length() ? -1 : 0;
//		return s1.length() > s2.length() ? -1 : s1.length() < s2.length() ? 1 : 0;
//		return Integer.compare(s1.length(), s2.length());
		return Integer.compare(s2.length(), s1.length());
	}
}

public class StringList {
	public static void main(String[] args) {
		List<String> list = new ArrayList<>();
		list.add("Sagarika");
		list.add("Sidhartha");
		list.add("Vaibhav");
		list.add("Rupa");
		list.add("Mama");
		
		System.out.println(list);
		
		Collections.sort(list);
		System.out.println("=====After Sorting====");
		System.out.println(list);
	
		Collections.sort(list, Collections.reverseOrder());
		System.out.println("Reversed Order Sorting");
		System.out.println(list);
		
		Collections.sort(list, new MyStringComparator());
		System.out.println("MyStringComparator Sorting");
		System.out.println(list);
		
		System.out.println("Custom Length Ascending Sorting");
		Collections.sort(list, new Comparator<String>() {
			public int compare(String s1, String s2) {
				return Integer.compare(s1.length(), s2.length());
			}
		});
		System.out.println(list);
		
		System.out.println("Custom Length Descending Sorting");
		Collections.sort(list, new Comparator<String>() {
			public int compare(String s1, String s2) {
				return Integer.compare(s2.length(), s1.length());
			}
		});
	}
}
